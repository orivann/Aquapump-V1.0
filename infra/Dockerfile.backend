FROM node:22-alpine AS base
RUN apk add --no-cache libc6-compat curl dumb-init
WORKDIR /app

FROM base AS deps
RUN npm install -g bun@latest
COPY package.json bun.lock* ./
RUN bun install --frozen-lockfile --production

FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV PORT=8081

RUN npm install -g bun@latest && \
    addgroup -g 1001 -S nodejs && \
    adduser -S appuser -u 1001

COPY --from=deps --chown=appuser:nodejs /app/node_modules ./node_modules
COPY --chown=appuser:nodejs package.json bun.lock* ./
COPY --chown=appuser:nodejs backend ./backend
COPY --chown=appuser:nodejs tsconfig.json ./

USER appuser

EXPOSE 8081

HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:8081/health || exit 1

CMD ["dumb-init", "--", "bun", "run", "backend/server.ts"]
