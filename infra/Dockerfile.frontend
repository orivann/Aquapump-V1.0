FROM node:22-alpine AS base
RUN apk add --no-cache libc6-compat curl dumb-init
WORKDIR /app

FROM base AS deps
RUN npm install -g bun@latest
COPY package.json bun.lock* ./
RUN bun install --frozen-lockfile

FROM base AS builder
WORKDIR /app
RUN npm install -g bun@latest @expo/cli
COPY --from=deps /app/node_modules ./node_modules
COPY package.json bun.lock* tsconfig.json ./
COPY frontend/app.json ./app.json
COPY app ./app
COPY frontend/assets ./assets
COPY components ./components
COPY constants ./constants
COPY contexts ./contexts
COPY lib ./lib
COPY frontend ./frontend

ENV NODE_ENV=production
ENV EXPO_USE_FAST_RESOLVER=1

RUN npx expo export --platform web

FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV PORT=8080

RUN npm install -g serve && \
    addgroup -g 1001 -S nodejs && \
    adduser -S appuser -u 1001

COPY --from=builder --chown=appuser:nodejs /app/dist ./public

USER appuser

EXPOSE 8080

HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:8080 || exit 1

CMD ["serve", "-s", "public", "-l", "8080"]
