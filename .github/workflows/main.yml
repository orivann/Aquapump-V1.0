name: CI/CD - Build & Deploy

on:
  push:
    branches:
      - main
      - staging
      - dev
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  ECR_REPOSITORY: aquapump
  AWS_REGION: eu-north-1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
    
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract metadata
        id: meta
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          BRANCH=${GITHUB_REF##*/}
          IMAGE_TAG=${{ github.sha }}
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "tags=$REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG,$REGISTRY/$ECR_REPOSITORY:$BRANCH" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./infra/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_ENV=production

      - name: Output image URL
        run: |
          echo "âœ… Image pushed successfully"
          echo "Tags: ${{ steps.meta.outputs.tags }}"

